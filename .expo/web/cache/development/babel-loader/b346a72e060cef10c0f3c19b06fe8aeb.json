{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\reactProject\\\\Guess-Number\\\\Screens\\\\StartGameScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../Components/Card\";\nimport Input from \"../Components/Input\";\nimport NumberContainer from \"../Components/NumberContainer\";\nimport Colors from \"../Constants/Colors\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(' '),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue('');\n    Keyboard.dismiss();\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      style: styles.summaryContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"You Selected\"), React.createElement(NumberContainer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, selectedNumber), React.createElement(Button, {\n      title: \"Start Game\",\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurONSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })))), confirmedOutput));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n    fontFamily: 'open-sans-bold'\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  button: {\n    width: 90\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["E:/reactProject/Guess-Number/Screens/StartGameScreen.js"],"names":["React","useState","Card","Input","NumberContainer","Colors","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","Keyboard","dismiss","confirmedOutput","styles","summaryContainer","onStartGame","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","fontFamily","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Text, Button, TouchableWithoutFeedback, Keyboard, Alert } from 'react-native';\r\n\r\nimport Card from '../Components/Card';\r\nimport Input from '../Components/Input';\r\nimport NumberContainer from '../Components/NumberContainer';\r\nimport Colors from '../Constants/Colors';\r\n\r\nconst StartGameScreen = props => {\r\n    const [enteredValue, setEnteredValue] = useState(' ');\r\n    const [confirmed, setConfirmed] = useState(false);\r\n    const [selectedNumber, setSelectedNumber] = useState('');\r\n\r\n    const numberInputHandler = inputText => {\r\n        setEnteredValue(inputText.replace(/[^0-9]/g, ''))\r\n    };\r\n\r\n    const resetInputHandler = () => {\r\n        setEnteredValue('');\r\n        setConfirmed(false);\r\n    };\r\n\r\n    const confirmInputHandler = () => {\r\n        const chosenNumber = parseInt(enteredValue);\r\n        if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n            Alert.alert(\r\n                'Invalid number',\r\n                'Number has to be a number between 1 and 99.',\r\n                [{text: 'Okay', style: 'destructive', onPress: resetInputHandler}]\r\n            );\r\n            return;\r\n        }\r\n        setConfirmed(true);\r\n        setSelectedNumber(chosenNumber);\r\n        setEnteredValue('');\r\n        Keyboard.dismiss();\r\n    };\r\n\r\n    let confirmedOutput;\r\n\r\n    if (confirmed) {\r\n        confirmedOutput = \r\n        <Card style = {styles.summaryContainer}>\r\n        <Text>You Selected</Text>\r\n        <NumberContainer>{selectedNumber}</NumberContainer>\r\n        <Button title=\"Start Game\" onPress={() => props.onStartGame(selectedNumber)} />\r\n        </Card>\r\n    }\r\n    return (\r\n        <TouchableWithoutFeedback onPress={() => {\r\n            Keyboard.dismiss();\r\n        }}>\r\n            <View style={styles.screen}>\r\n                <Text style={styles.title}>Start a New Game!</Text>\r\n                <Card style={styles.inputContainer}>\r\n                    <Text>Select a Number</Text>\r\n                    <Input\r\n                        style={styles.input}\r\n                        blurONSubmit\r\n                        autoCapitalize='none'\r\n                        autoCorrect={false}\r\n                        keyboardType=\"number-pad\"\r\n                        maxLength={2}\r\n                        onChangeText={numberInputHandler}\r\n                        value={enteredValue}\r\n                    />\r\n                    <View style={styles.buttonContainer}>\r\n                        <View style={styles.button}>\r\n                            <Button title=\"Reset\"\r\n                                onPress={resetInputHandler}\r\n                                color={Colors.accent} /></View>\r\n                        <View style={styles.button}>\r\n                            <Button title=\"Confirm\" onPress={confirmInputHandler} color={Colors.primary} /></View>\r\n                    </View>\r\n                </Card>\r\n                {confirmedOutput}\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 10,\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginVertical: 10,\r\n        fontFamily:'open-sans-bold'\r\n    },\r\n    inputContainer: {\r\n        width: 300,\r\n        maxWidth: '80%',\r\n        alignItems: 'center'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 15\r\n    },\r\n    button: {\r\n        width: 90\r\n    },\r\n    input: {\r\n        width: 50,\r\n        textAlign: 'center'\r\n    },\r\n    summaryContainer:{\r\n        marginTop:20,\r\n        alignItems:'center'\r\n    }\r\n\r\n});\r\n\r\nexport default StartGameScreen\r\n"]},"metadata":{},"sourceType":"module"}