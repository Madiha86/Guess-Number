{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\reactProject\\\\Guess-Number\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from 'expo-font';\nimport Header from \"./Components/Header\";\nimport StartGameScreen from \"./Screens/StartGameScreen\";\nimport GameScreen from \"./Screens/GameScreen\";\nimport GameOverScreen from \"./Screens/GameOverScreen\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      GuessRounds = _useState4[0],\n      setGuessRounds = _useState4[1];\n\n  var _useFonts = useFonts({\n    bold: require(\"./assets/fonts/Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  var configureNewGameHandler = function configureNewGameHandler() {\n    setGuessRounds(0);\n    setUserNumber(null);\n  };\n\n  var startGameHandler = function startGameHandler(selectedNumber) {\n    setUserNumber(selectedNumber);\n  };\n\n  var GameOverHandler = function GameOverHandler(numOfRounds) {\n    setGuessRounds(numOfRounds);\n  };\n\n  var content = React.createElement(StartGameScreen, {\n    onStartGame: startGameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  });\n\n  if (userNumber && GuessRounds <= 0) {\n    content = React.createElement(GameScreen, {\n      userChoice: userNumber,\n      onGameOver: GameOverHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    });\n  } else if (GuessRounds > 0) {\n    content = React.createElement(GameOverScreen, {\n      roundsNumber: GuessRounds,\n      UserNumber: userNumber,\n      onRestart: configureNewGameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    title: \"Guess a Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), content);\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["E:/reactProject/Guess-Number/App.js"],"names":["StatusBar","React","useState","useFonts","Header","StartGameScreen","GameScreen","GameOverScreen","App","userNumber","setUserNumber","GuessRounds","setGuessRounds","bold","require","loaded","configureNewGameHandler","startGameHandler","selectedNumber","GameOverHandler","numOfRounds","content","styles","screen","StyleSheet","create","flex"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAOC,MAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AAIA,eAAe,SAASC,GAAT,GAAe;AAE5B,kBAAoCN,QAAQ,EAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAsCR,QAAQ,CAAC,CAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AAGA,kBAAiBT,QAAQ,CAAC;AACxBU,IAAAA,IAAI,EAAEC,OAAO;AADW,GAAD,CAAzB;AAAA;AAAA,MAAOC,MAAP;;AAIA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAaD,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpCJ,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD,EAAoB;AAC3CR,IAAAA,aAAa,CAACQ,cAAD,CAAb;AACD,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAiB;AACvCR,IAAAA,cAAc,CAACQ,WAAD,CAAd;AACD,GAFD;;AAIA,MAAIC,OAAO,GAAG,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEJ,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AAEA,MAAIR,UAAU,IAAIE,WAAW,IAAI,CAAjC,EAAoC;AAClCU,IAAAA,OAAO,GAAG,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEZ,UAAxB;AAAoC,MAAA,UAAU,EAAEU,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFD,MAGK,IAAIR,WAAW,GAAG,CAAlB,EAAqB;AACxBU,IAAAA,OAAO,GAAG,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAEV,WAA9B;AAA2C,MAAA,UAAU,EAAEF,UAAvD;AAAmE,MAAA,SAAS,EAAEO,uBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEGF,OAFH,CADF;AAMD;AAED,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AACNG,IAAAA,IAAI,EAAE;AADA;AADuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useFonts } from 'expo-font';\n\nimport Header from './Components/Header';\nimport StartGameScreen from './Screens/StartGameScreen';\nimport GameScreen from './Screens/GameScreen';\nimport GameOverScreen from './Screens/GameOverScreen';\n\n\n\nexport default function App() {\n\n  const [userNumber, setUserNumber] = useState();\n  const [GuessRounds, setGuessRounds] = useState(0);\n // const [dataLoaded, setdataLoaded] = useState(false);\n\n  const [loaded] = useFonts({\n    bold :require('./assets/fonts/Bold.ttf'),\n  });\n  \n  if (!loaded) {\n    return null;\n  }\n  \n\n  //if (!dataLoaded) {\n  //  return (\n  //    <AppLoading \n   //   startAsync={fetchFonts}\n   //     onFinish={() => setdataLoaded(true)}\n   //    onError={(err) => console.log(err)}\n   //   />\n  //  );\n // }\n\n  const configureNewGameHandler = () => {\n    setGuessRounds(0);\n    setUserNumber(null);\n  }\n\n  const startGameHandler = (selectedNumber) => {\n    setUserNumber(selectedNumber);\n  };\n\n  const GameOverHandler = (numOfRounds) => {\n    setGuessRounds(numOfRounds);\n  }\n\n  let content = <StartGameScreen onStartGame={startGameHandler} />\n\n  if (userNumber && GuessRounds <= 0) {\n    content = <GameScreen userChoice={userNumber} onGameOver={GameOverHandler} />\n  }\n  else if (GuessRounds > 0) {\n    content = <GameOverScreen roundsNumber={GuessRounds} UserNumber={userNumber} onRestart={configureNewGameHandler} />;\n  }\n\n  return (\n    <View style={styles.screen}>\n        <Header title=\"Guess a Number\" />\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"module"}